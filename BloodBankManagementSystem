import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
class Donor 
{
    String name;
    String bloodType;
    int age;    
    Donor(String name, String bloodType, int age) {
        this.name = name;
        this.bloodType = bloodType;
        this.age = age;
    }
    public String getBloodType() {
        return bloodType;
    }
    public String toString() {
        return "Donor{name='" + name + "', bloodType='" + bloodType + "', age=" + age + "}";
    }
}
class BloodBank 
{
    private List<Donor> donors;
    private int totalBloodStock;
    
    BloodBank() 
    {
        donors = new ArrayList<>();
        totalBloodStock = 0;
    }

    public void addDonor(Donor donor) 
    {
        donors.add(donor);
        totalBloodStock += 1; 
    }
    public boolean issueBlood(String bloodType) {
        for (Donor donor : donors) {
            if (donor.getBloodType().equals(bloodType)) {
                totalBloodStock -= 1;
                donors.remove(donor); 
                return true;
            }
        }
        return false; 
    }
    public int getTotalBloodStock() 
    {
        return totalBloodStock;
    }
    public List<Donor> getDonors() 
    {
        return donors;
    }
}
class BloodRequest {
    String patientName;
    String requiredBloodType;
    
    BloodRequest(String patientName, String requiredBloodType) {
        this.patientName = patientName;
        this.requiredBloodType = requiredBloodType;
    }
   
    public String toString() {
        return "BloodRequest{patientName='" + patientName + "', requiredBloodType='" + requiredBloodType + "'}";
    }
}

public class BloodBankManagementSystem {
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        BloodBank bloodBank = new BloodBank();
        while (true) {
            System.out.println("\nBlood Bank Management System");
            System.out.println("1. Add Donor");
            System.out.println("2. Issue Blood");
            System.out.println("3. View Blood Stock");
            System.out.println("4. View Donors");
            System.out.println("5. Exit");

            int choice = scanner.nextInt();
            scanner.nextLine();  

            switch (choice) {
                case 1:
                    System.out.print("Enter donor name: ");
                    String donorName = scanner.nextLine();
                    System.out.print("Enter donor blood type: ");
                    String bloodType = scanner.nextLine();
                    System.out.print("Enter donor age: ");
                    int age = scanner.nextInt();
                    scanner.nextLine(); 

                    Donor donor = new Donor(donorName, bloodType, age);
                    bloodBank.addDonor(donor);
                    System.out.println("Donor added successfully.");
                    break;
                case 2:
                    System.out.print("Enter blood type required: ");
                    String requiredBloodType = scanner.nextLine();
                    System.out.print("Enter patient name: ");
                    String patientName = scanner.nextLine();
                    BloodRequest request = new BloodRequest(patientName, requiredBloodType);

                    boolean issued = bloodBank.issueBlood(requiredBloodType);
                    if (issued) {
                        System.out.println("Blood issued successfully to " + patientName);
                    } else {
                        System.out.println("Blood of type " + requiredBloodType + " is not available.");
                    }
                    break;
                case 3:
                    System.out.println("Total blood stock: " + bloodBank.getTotalBloodStock() + " units");
                    break;
                case 4:
                    System.out.println("List of donors:");
                    for (Donor d : bloodBank.getDonors()) {
                        System.out.println(d);
                    }
                    break;
                case 5:
                    System.out.println("Exiting the system...");
                    return;
                default:
                    System.out.println("Invalid choice, please try again.");
            }
        }
    }
}
